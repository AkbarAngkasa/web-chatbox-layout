// =======================
    // == Izin akses kamera ==
    // =======================
    const [cameraAccess, setCameraAccess] = useState(true);

    function accessNotGranted() {
        return setCameraAccess(false)
    }

    function accessGranted() {
        return setCameraAccess(true)
    }

    // minta izin user untuk mengakses kamera
    useEffect(() => {
        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;

        if (navigator.getUserMedia) {
            // jalankan fungsi accessGranted, dan accessNotGranted jika izin ditolak
            navigator.getUserMedia({ video: true }, accessGranted, accessNotGranted);
        }
    }, [cameraAccess])

    // ====================
    // == Control kamera ==
    // ====================
    // Mode/Arah kamera user
    const FACING_MODE_USER = "user";
    const FACING_MODE_ENVIRONMENT = "environment";

    // Arah kamera user Mobile SM
    const videoConstraintsMobile = {
        // Default value camera:
        facingMode: FACING_MODE_ENVIRONMENT,
        // === Mobile
        width: 500,
        height: 500,
    };
    
    // Arah kamera user Desktop SM
    const videoConstraintsDesktop = {
        // Default value camera:
        facingMode: FACING_MODE_ENVIRONMENT,
        // === Desktop
        width: 300,
        height: 300
    };

    const [facingMode, setFacingMode] = useState(FACING_MODE_USER);

    // Ubah kamera user handler (front camera or back camera)
    const handleCameraSwitch = useCallback(() => {
        setFacingMode(
            prevState =>
                prevState === FACING_MODE_USER
                    ? FACING_MODE_ENVIRONMENT
                    : FACING_MODE_USER
        );
    }, []);

    // ==================
    // === Ambil foto ===
    // ==================
    // Ambil foto
    const webcamRef = useRef(null);
    const [image, setImage] = useState('');
    const capture = useCallback(() => {
        const imageSrc = webcamRef.current.getScreenshot();
        setImage(imageSrc)
    }, []);

    // Ambil ulang foto
    const reCapture = useCallback(() => {
        setImage('')
    }, [])